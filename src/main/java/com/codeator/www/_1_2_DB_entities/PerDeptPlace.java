package com.codeator.www._1_2_DB_entities;
// Generated Jun 14, 2021 10:15:42 PM by Hibernate Tools 4.3.1


import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * PerDeptPlace generated by hbm2java
 */
@Entity
@Table(name="PER_DEPT_PLACE"
    ,schema="CODEATOR"
)
public class PerDeptPlace  implements java.io.Serializable {


     private PerDeptPlaceId id;
     private PerDeptOld perDeptOld;
     private PerLocationCode perLocationCode;
     private String floorNo;
     private Integer roomNo;
     private String rmrk;

    public PerDeptPlace() {
    }

	
    public PerDeptPlace(PerDeptPlaceId id, PerDeptOld perDeptOld) {
        this.id = id;
        this.perDeptOld = perDeptOld;
    }
    public PerDeptPlace(PerDeptPlaceId id, PerDeptOld perDeptOld, PerLocationCode perLocationCode, String floorNo, Integer roomNo, String rmrk) {
       this.id = id;
       this.perDeptOld = perDeptOld;
       this.perLocationCode = perLocationCode;
       this.floorNo = floorNo;
       this.roomNo = roomNo;
       this.rmrk = rmrk;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="sectionNoOld", column=@Column(name="SECTION_NO_OLD", nullable=false, precision=5, scale=0) ), 
        @AttributeOverride(name="depNoOld", column=@Column(name="DEP_NO_OLD", nullable=false, precision=10, scale=0) ), 
        @AttributeOverride(name="floorSp", column=@Column(name="FLOOR_SP", nullable=false, precision=7, scale=0) ) } )
    public PerDeptPlaceId getId() {
        return this.id;
    }
    
    public void setId(PerDeptPlaceId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumns( { 
        @JoinColumn(name="SECTION_NO_OLD", referencedColumnName="SECTION_NO_OLD", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="DEP_NO_OLD", referencedColumnName="DEP_NO_OLD", nullable=false, insertable=false, updatable=false) } )
    public PerDeptOld getPerDeptOld() {
        return this.perDeptOld;
    }
    
    public void setPerDeptOld(PerDeptOld perDeptOld) {
        this.perDeptOld = perDeptOld;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumns( { 
        @JoinColumn(name="LOCATION_CODE", referencedColumnName="LOCATION_CODE"), 
        @JoinColumn(name="LOC_CODE", referencedColumnName="LOC_CODE") } )
    public PerLocationCode getPerLocationCode() {
        return this.perLocationCode;
    }
    
    public void setPerLocationCode(PerLocationCode perLocationCode) {
        this.perLocationCode = perLocationCode;
    }

    
    @Column(name="FLOOR_NO", length=20)
    public String getFloorNo() {
        return this.floorNo;
    }
    
    public void setFloorNo(String floorNo) {
        this.floorNo = floorNo;
    }

    
    @Column(name="ROOM_NO", precision=7, scale=0)
    public Integer getRoomNo() {
        return this.roomNo;
    }
    
    public void setRoomNo(Integer roomNo) {
        this.roomNo = roomNo;
    }

    
    @Column(name="RMRK", length=240)
    public String getRmrk() {
        return this.rmrk;
    }
    
    public void setRmrk(String rmrk) {
        this.rmrk = rmrk;
    }




}


