package com.codeator.www._1_2_DB_entities;
// Generated Sep 1, 2020 9:49:26 AM by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * VcleRecordMovementJoin generated by hbm2java
 */
@Entity
@Table(name="VCLE_RECORD_MOVEMENT_JOIN"
    ,schema="CODEATOR"
)
public class VcleRecordMovementJoin  implements java.io.Serializable {


     private long requireSp;
     private VcleVehicleRequire vcleVehicleRequire;
     private VcleRecordMovement vcleRecordMovement;
     private VcleDeptNumber vcleDeptNumber;
     private PerEmploymentMaster perEmploymentMaster;
     private PerDeptOld perDeptOld;
     private String placeName;
     private String userId;
     private boolean requireType;
     private Byte personNum;
     private String personName;
     private Boolean chkPerson;
     private Date recordCreateDate;
     private Date recordUpdateDate;
     private String recordUpdateUser;

    public VcleRecordMovementJoin() {
    }

	
    public VcleRecordMovementJoin(VcleVehicleRequire vcleVehicleRequire, VcleRecordMovement vcleRecordMovement, boolean requireType) {
        this.vcleVehicleRequire = vcleVehicleRequire;
        this.vcleRecordMovement = vcleRecordMovement;
        this.requireType = requireType;
    }
    public VcleRecordMovementJoin(VcleVehicleRequire vcleVehicleRequire, VcleRecordMovement vcleRecordMovement, VcleDeptNumber vcleDeptNumber, PerEmploymentMaster perEmploymentMaster, PerDeptOld perDeptOld, String placeName, String userId, boolean requireType, Byte personNum, String personName, Boolean chkPerson, Date recordCreateDate, Date recordUpdateDate, String recordUpdateUser) {
       this.vcleVehicleRequire = vcleVehicleRequire;
       this.vcleRecordMovement = vcleRecordMovement;
       this.vcleDeptNumber = vcleDeptNumber;
       this.perEmploymentMaster = perEmploymentMaster;
       this.perDeptOld = perDeptOld;
       this.placeName = placeName;
       this.userId = userId;
       this.requireType = requireType;
       this.personNum = personNum;
       this.personName = personName;
       this.chkPerson = chkPerson;
       this.recordCreateDate = recordCreateDate;
       this.recordUpdateDate = recordUpdateDate;
       this.recordUpdateUser = recordUpdateUser;
    }
   
     @GenericGenerator(name="generator", strategy="foreign", parameters=@Parameter(name="property", value="vcleVehicleRequire"))@Id @GeneratedValue(generator="generator")

    
    @Column(name="REQUIRE_SP", nullable=false, precision=11, scale=0)
    public long getRequireSp() {
        return this.requireSp;
    }
    
    public void setRequireSp(long requireSp) {
        this.requireSp = requireSp;
    }

@OneToOne(fetch=FetchType.EAGER)@PrimaryKeyJoinColumn
    public VcleVehicleRequire getVcleVehicleRequire() {
        return this.vcleVehicleRequire;
    }
    
    public void setVcleVehicleRequire(VcleVehicleRequire vcleVehicleRequire) {
        this.vcleVehicleRequire = vcleVehicleRequire;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="GOING_SP", nullable=false)
    public VcleRecordMovement getVcleRecordMovement() {
        return this.vcleRecordMovement;
    }
    
    public void setVcleRecordMovement(VcleRecordMovement vcleRecordMovement) {
        this.vcleRecordMovement = vcleRecordMovement;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="DEPT_ID")
    public VcleDeptNumber getVcleDeptNumber() {
        return this.vcleDeptNumber;
    }
    
    public void setVcleDeptNumber(VcleDeptNumber vcleDeptNumber) {
        this.vcleDeptNumber = vcleDeptNumber;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="EMPLOYEE_ID")
    public PerEmploymentMaster getPerEmploymentMaster() {
        return this.perEmploymentMaster;
    }
    
    public void setPerEmploymentMaster(PerEmploymentMaster perEmploymentMaster) {
        this.perEmploymentMaster = perEmploymentMaster;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumns( { 
        @JoinColumn(name="SECTION_NO_OLD", referencedColumnName="SECTION_NO_OLD"), 
        @JoinColumn(name="DEP_NO_OLD", referencedColumnName="DEP_NO_OLD") } )
    public PerDeptOld getPerDeptOld() {
        return this.perDeptOld;
    }
    
    public void setPerDeptOld(PerDeptOld perDeptOld) {
        this.perDeptOld = perDeptOld;
    }

    
    @Column(name="PLACE_NAME", length=200)
    public String getPlaceName() {
        return this.placeName;
    }
    
    public void setPlaceName(String placeName) {
        this.placeName = placeName;
    }

    
    @Column(name="USER_ID", length=22)
    public String getUserId() {
        return this.userId;
    }
    
    public void setUserId(String userId) {
        this.userId = userId;
    }

    
    @Column(name="REQUIRE_TYPE", nullable=false, precision=1, scale=0)
    public boolean isRequireType() {
        return this.requireType;
    }
    
    public void setRequireType(boolean requireType) {
        this.requireType = requireType;
    }

    
    @Column(name="PERSON_NUM", precision=2, scale=0)
    public Byte getPersonNum() {
        return this.personNum;
    }
    
    public void setPersonNum(Byte personNum) {
        this.personNum = personNum;
    }

    
    @Column(name="PERSON_NAME", length=200)
    public String getPersonName() {
        return this.personName;
    }
    
    public void setPersonName(String personName) {
        this.personName = personName;
    }

    
    @Column(name="CHK_PERSON", precision=1, scale=0)
    public Boolean getChkPerson() {
        return this.chkPerson;
    }
    
    public void setChkPerson(Boolean chkPerson) {
        this.chkPerson = chkPerson;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="RECORD_CREATE_DATE", length=7)
    public Date getRecordCreateDate() {
        return this.recordCreateDate;
    }
    
    public void setRecordCreateDate(Date recordCreateDate) {
        this.recordCreateDate = recordCreateDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="RECORD_UPDATE_DATE", length=7)
    public Date getRecordUpdateDate() {
        return this.recordUpdateDate;
    }
    
    public void setRecordUpdateDate(Date recordUpdateDate) {
        this.recordUpdateDate = recordUpdateDate;
    }

    
    @Column(name="RECORD_UPDATE_USER", length=22)
    public String getRecordUpdateUser() {
        return this.recordUpdateUser;
    }
    
    public void setRecordUpdateUser(String recordUpdateUser) {
        this.recordUpdateUser = recordUpdateUser;
    }




}


