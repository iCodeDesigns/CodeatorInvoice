package com.codeator.www._1_2_DB_entities_mysql;
// Generated Jun 16, 2019 2:30:41 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Employees generated by hbm2java
 */
@Entity
@Table(name="employees"
    ,catalog="alert_demo"
    , uniqueConstraints = @UniqueConstraint(columnNames="emp_password") 
)
public class Employees  implements java.io.Serializable {


     private Integer empId;
     private Departmens departmens;
     private int empNo;
     private String empName;
     private Date birthDate;
     private String gender;
     private String empPassword;
     private Set<CalenderAlertNotifications> calenderAlertNotificationses = new HashSet<CalenderAlertNotifications>(0);
     private Set<CalenderAlertNotifications> calenderAlertNotificationses_1 = new HashSet<CalenderAlertNotifications>(0);

    public Employees() {
    }

	
    public Employees(Departmens departmens, int empNo, String empName, Date birthDate, String gender) {
        this.departmens = departmens;
        this.empNo = empNo;
        this.empName = empName;
        this.birthDate = birthDate;
        this.gender = gender;
    }
    public Employees(Departmens departmens, int empNo, String empName, Date birthDate, String gender, String empPassword, Set<CalenderAlertNotifications> calenderAlertNotificationses, Set<CalenderAlertNotifications> calenderAlertNotificationses_1) {
       this.departmens = departmens;
       this.empNo = empNo;
       this.empName = empName;
       this.birthDate = birthDate;
       this.gender = gender;
       this.empPassword = empPassword;
       this.calenderAlertNotificationses = calenderAlertNotificationses;
       this.calenderAlertNotificationses_1 = calenderAlertNotificationses_1;
    }
    public Employees(Departmens departmens, int empNo, String empName, Date birthDate, String gender, String empPassword) {
       this.departmens = departmens;
       this.empNo = empNo;
       this.empName = empName;
       this.birthDate = birthDate;
       this.gender = gender;
       this.empPassword = empPassword;
       this.calenderAlertNotificationses = calenderAlertNotificationses;
       this.calenderAlertNotificationses_1 = calenderAlertNotificationses_1;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="emp_id", unique=true, nullable=false)
    public Integer getEmpId() {
        return this.empId;
    }
    
    public void setEmpId(Integer empId) {
        this.empId = empId;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="dept_id", nullable=false)
    public Departmens getDepartmens() {
        return this.departmens;
    }
    
    public void setDepartmens(Departmens departmens) {
        this.departmens = departmens;
    }

    
    @Column(name="emp_no", nullable=false)
    public int getEmpNo() {
        return this.empNo;
    }
    
    public void setEmpNo(int empNo) {
        this.empNo = empNo;
    }

    
    @Column(name="emp_name", nullable=false, length=100)
    public String getEmpName() {
        return this.empName;
    }
    
    public void setEmpName(String empName) {
        this.empName = empName;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="birth_date", nullable=false, length=10)
    public Date getBirthDate() {
        return this.birthDate;
    }
    
    public void setBirthDate(Date birthDate) {
        this.birthDate = birthDate;
    }

    
    @Column(name="gender", nullable=false, length=6)
    public String getGender() {
        return this.gender;
    }
    
    public void setGender(String gender) {
        this.gender = gender;
    }

    
    @Column(name="emp_password", unique=true, length=45)
    public String getEmpPassword() {
        return this.empPassword;
    }
    
    public void setEmpPassword(String empPassword) {
        this.empPassword = empPassword;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="employees")
    public Set<CalenderAlertNotifications> getCalenderAlertNotificationses() {
        return this.calenderAlertNotificationses;
    }
    
    public void setCalenderAlertNotificationses(Set<CalenderAlertNotifications> calenderAlertNotificationses) {
        this.calenderAlertNotificationses = calenderAlertNotificationses;
    }

@ManyToMany(fetch=FetchType.EAGER, mappedBy="employeeses")
    public Set<CalenderAlertNotifications> getCalenderAlertNotificationses_1() {
        return this.calenderAlertNotificationses_1;
    }
    
    public void setCalenderAlertNotificationses_1(Set<CalenderAlertNotifications> calenderAlertNotificationses_1) {
        this.calenderAlertNotificationses_1 = calenderAlertNotificationses_1;
    }




}


